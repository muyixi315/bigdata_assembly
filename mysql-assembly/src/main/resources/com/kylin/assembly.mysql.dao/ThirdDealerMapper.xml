<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kylin.assembly.mysql.dao.ThirdDealerMapper">
  <resultMap id="BaseResultMap" type="ThirdDealer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dealer_name" jdbcType="VARCHAR" property="dealer_name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="zbx" jdbcType="VARCHAR" property="zbx" />
    <result column="zby" jdbcType="VARCHAR" property="zby" />
    <result column="brand_type" jdbcType="VARCHAR" property="brand_type" />
    <result column="dealer_id" jdbcType="INTEGER" property="dealer_id" />
  </resultMap>
  <sql id="Base_Column_List">
    id, dealer_name, phone, address, zbx, zby, brand_type, dealer_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from third_dealer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from third_dealer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="ThirdDealer">
    insert into third_dealer (id, dealer_name, phone, 
      address, zbx, zby, 
      brand_type, dealer_id)
    values (#{id,jdbcType=INTEGER}, #{dealer_name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{zbx,jdbcType=VARCHAR}, #{zby,jdbcType=VARCHAR}, 
      #{brand_type,jdbcType=VARCHAR}, #{dealer_id,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ThirdDealer">
    insert into third_dealer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dealer_name != null">
        dealer_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="zbx != null">
        zbx,
      </if>
      <if test="zby != null">
        zby,
      </if>
      <if test="brand_type != null">
        brand_type,
      </if>
      <if test="dealer_id != null">
        dealer_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dealer_name != null">
        #{dealer_name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zbx != null">
        #{zbx,jdbcType=VARCHAR},
      </if>
      <if test="zby != null">
        #{zby,jdbcType=VARCHAR},
      </if>
      <if test="brand_type != null">
        #{brand_type,jdbcType=VARCHAR},
      </if>
      <if test="dealer_id != null">
        #{dealer_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ThirdDealer">
    update third_dealer
    <set>
      <if test="dealer_name != null">
        dealer_name = #{dealer_name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="zbx != null">
        zbx = #{zbx,jdbcType=VARCHAR},
      </if>
      <if test="zby != null">
        zby = #{zby,jdbcType=VARCHAR},
      </if>
      <if test="brand_type != null">
        brand_type = #{brand_type,jdbcType=VARCHAR},
      </if>
      <if test="dealer_id != null">
        dealer_id = #{dealer_id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ThirdDealer">
    update third_dealer
    set dealer_name = #{dealer_name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      zbx = #{zbx,jdbcType=VARCHAR},
      zby = #{zby,jdbcType=VARCHAR},
      brand_type = #{brand_type,jdbcType=VARCHAR},
      dealer_id = #{dealer_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <insert id="saveRecordByBrand" parameterType="map">
  insert into third_dealer (id, dealer_name, phone,
  address, zbx, zby,
  brand_type, dealer_id,city)
  VALUES
  <foreach collection="list" item="item" index="index" separator="," >
    (#{item.id,jdbcType=INTEGER}, #{item.dealer_name,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR},
    #{item.address,jdbcType=VARCHAR}, #{item.zbx,jdbcType=VARCHAR}, #{item.zby,jdbcType=VARCHAR},
    #{brand_type,jdbcType=VARCHAR}, #{item.dealer_id,jdbcType=INTEGER},#{item.city,jdbcType=VARCHAR})
  </foreach>
</insert>

  <insert id="saveRecordByBrandPojo" parameterType="map">
    insert into third_dealer (id, dealer_name, phone,
    address, zbx, zby,
    brand_type, dealer_id,city)
    VALUES
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.id,jdbcType=INTEGER}, #{item.dealer_name,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR},
      #{item.address,jdbcType=VARCHAR}, #{item.zbx,jdbcType=VARCHAR}, #{item.zby,jdbcType=VARCHAR},
      #{pojo.brand_type,jdbcType=VARCHAR}, #{item.dealer_id,jdbcType=INTEGER},#{item.city,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>